name: Build and Deploy

on:
  push:
    branches: [ "main"]
  pull_request:
    branches: [ "main","pipeline-test"]    

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/customer-service #change service name before build

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17
      
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Gradle build
      run: ./gradlew build

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: customer-service
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Update kube config
      run: aws eks update-kubeconfig --name labs --region ${{ secrets.AWS_REGION }}

    - uses: azure/setup-helm@v3
      with:
        version: 'v3.8.2' # default is latest (stable) test
        token: ${{ secrets.GITHUB_TOKEN }} # only needed if version is 'latest'
      id: install
    
    - name: Pushing the Helm Deployment
      run: |
        envsubst < k8s-config/dev/values.yaml > k8s-config/dev/updatedvalues.yaml
        cat k8s-config/dev/updatedvalues.yaml
          
    - name: Deploy Helm
      uses: bitovi/github-actions-deploy-eks-helm@v1.1.0
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        cluster-name: labs
        cluster-role-arn: ${{ secrets.AWS_ROLE_ARN }}
        config-files:  services/customer-service/k8s-config/dev/values.yaml
        chart-path: _helm_chart/xebia/helm-xebia-service-chart
        namespace: dev-test
        values: tag=$IMAGE_TAG
        name: customer-service 
        version: 1.0.10
        atomic: true


