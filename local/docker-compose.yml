version: "3.8"
networks:
  fxnwk:
    name: app
    driver: bridge
volumes:
  postgres_data:
  pgadmin:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
services:
  db:
    image: postgres:13.3
    container_name: fxdb
    restart: always
    volumes:
      - ./db:/docker-entrypoint-initdb.d
    networks:
      - fxnwk
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_MULTIPLE_DATABASES: |-
        sampledb,sonardb
      PGDATA: /var/lib/postgresql/data/pgdata
    healthcheck:
      test: pg_isready -U postgres
      interval: 1m
      timeout: 10s
      retries: 2
  pgadmin:
    container_name: fxpgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pg@finx.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      POSTGRES_PASSWORD: postgres
      PGADMIN_PORT: 5050
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - fxnwk
    restart: unless-stopped
    profiles: ["full"]
  redis:
    image: redis:6.2
    container_name: fxredis
    restart: always
    ports:
      - "6379:6379"
  zookeeper:
    image: "bitnami/zookeeper:3"
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - fxnwk
    profiles: ["kafka", "full"]
  kafka:
    image: "bitnami/kafka:2"
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    depends_on:
      - zookeeper
    networks:
      - fxnwk
    profiles: ["kafka", "full"]
  sonarqube:
    image: sonarqube:community
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonardb
      SONAR_JDBC_USERNAME: postgres
      SONAR_JDBC_PASSWORD: postgres
    networks:
      - fxnwk
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"
    profiles: ["full"]
